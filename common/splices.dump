Building gonimo-common-0.9.1.0...
Preprocessing library gonimo-common-0.9.1.0...
[2 of 4] Compiling Gonimo.Db.Entities ( src/Gonimo/Db/Entities.hs, dist/build/Gonimo/Db/Entities.js_o )
Linking Template Haskell (Gonimo.Types,ThRunner1)
src/Gonimo/Db/Entities.hs:(28,99)-(71,2): Splicing expression
    template-haskell-2.11.0.0:Language.Haskell.TH.Quote.quoteExp
      persistLowerCase
      "\n\
      \  Account\n\
      \    created UTCTime\n\
      \    deriving Generic\n\
      \\n\
      \  Family\n\
      \    name Server.FamilyName\n\
      \    created UTCTime\n\
      \    lastAccessed UTCTime -- TODO: Should really by \"lastModified\", fix it once we have db migrations and smart client updates.\n\
      \    lastUsedBabyNames [Text]\n\
      \    deriving Generic Show\n\
      \\n\
      \  FamilyAccount\n\
      \    accountId AccountId\n\
      \    familyId  FamilyId\n\
      \    joined UTCTime\n\
      \    invitedBy InvitationDelivery Maybe\n\
      \    FamilyMember accountId familyId\n\
      \\n\
      \  Invitation\n\
      \    secret Secret\n\
      \    familyId FamilyId\n\
      \    created UTCTime\n\
      \    delivery InvitationDelivery\n\
      \    senderId DeviceId -- Use DeviceId here as it is the most precise information about the sender.\n\
      \    receiverId AccountId Maybe  -- To be set on put InvitationInfo\n\
      \    SecretInvitation secret\n\
      \    deriving Show Generic\n\
      \\n\
      \  Device -- or more precise: a browser on a device\n\
      \    name Text Maybe\n\
      \    authToken AuthToken\n\
      \    accountId AccountId\n\
      \    lastAccessed UTCTime\n\
      \    userAgent Text\n\
      \    AuthTokenDevice authToken\n\
      \    deriving Generic\n\
      \\n\
      \  User\n\
      \    login Text\n\
      \    password Text\n\
      \    accountId AccountId\n\
      \    AccountIdUser accountId\n"
  ======>
    [(persistent-2.6:Database.Persist.Types.Base.EntityDef
        (persistent-2.6:Database.Persist.Types.Base.HaskellName
           (packPTH "Account"))
        (persistent-2.6:Database.Persist.Types.Base.DBName
           (packPTH "account"))
        (persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Id"))
           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "AccountId"))
           persistent-2.6:Database.Persist.Types.Base.SqlInt64
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Account"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
        []
        [persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "created"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "created"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "UTCTime"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for created"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference]
        []
        []
        [packPTH "Generic"]
        (containers-0.5.7.1:Data.Map.Base.fromList [])
        False)
       {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "created"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "created"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "UTCTime"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy UTCTime))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference],
        persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                   (packPTH "Id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                   (packPTH "id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                   Nothing (packPTH "AccountId"))
                                                                (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                   (Data.Proxy.Proxy ::
                                                                      Data.Proxy.Proxy GHC.Int.Int64))
                                                                []
                                                                True
                                                                (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Account"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      (Just (packPTH "Data.Int"))
                                                                      (packPTH "Int64")))},
     (persistent-2.6:Database.Persist.Types.Base.EntityDef
        (persistent-2.6:Database.Persist.Types.Base.HaskellName
           (packPTH "Family"))
        (persistent-2.6:Database.Persist.Types.Base.DBName
           (packPTH "family"))
        (persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Id"))
           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "FamilyId"))
           persistent-2.6:Database.Persist.Types.Base.SqlInt64
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Family"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
        []
        [persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "name"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "name"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              (Just (packPTH "Server")) (packPTH "FamilyName"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for name"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "created"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "created"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "UTCTime"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for created"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "lastAccessed"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "last_accessed"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "UTCTime"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for lastAccessed"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "lastUsedBabyNames"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "last_used_baby_names"))
           (persistent-2.6:Database.Persist.Types.Base.FTList
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "Text")))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for lastUsedBabyNames"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference]
        []
        []
        [packPTH "Generic", packPTH "Show"]
        (containers-0.5.7.1:Data.Map.Base.fromList [])
        False)
       {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "name"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "name"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        (Just (packPTH "Server"))
                                                                        (packPTH "FamilyName"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy Server.FamilyName))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "created"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "created"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "UTCTime"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy UTCTime))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "lastAccessed"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "last_accessed"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "UTCTime"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy UTCTime))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH
                                                                           "lastUsedBabyNames"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH
                                                                           "last_used_baby_names"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTList
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "Text")))
                                                                     persistent-2.6:Database.Persist.Types.Base.SqlString
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference],
        persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                   (packPTH "Id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                   (packPTH "id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                   Nothing (packPTH "FamilyId"))
                                                                (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                   (Data.Proxy.Proxy ::
                                                                      Data.Proxy.Proxy GHC.Int.Int64))
                                                                []
                                                                True
                                                                (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Family"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      (Just (packPTH "Data.Int"))
                                                                      (packPTH "Int64")))},
     (persistent-2.6:Database.Persist.Types.Base.EntityDef
        (persistent-2.6:Database.Persist.Types.Base.HaskellName
           (packPTH "FamilyAccount"))
        (persistent-2.6:Database.Persist.Types.Base.DBName
           (packPTH "family_account"))
        (persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Id"))
           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "FamilyAccountId"))
           persistent-2.6:Database.Persist.Types.Base.SqlInt64
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "FamilyAccount"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
        []
        [persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "accountId"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "account_id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "AccountId"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for accountId"))
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Account"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "familyId"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "family_id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "FamilyId"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for familyId"))
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Family"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "joined"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "joined"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "UTCTime"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for joined"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "invitedBy"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "invited_by"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "InvitationDelivery"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for invitedBy"))
           [packPTH "Maybe"]
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference]
        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "FamilyMember"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "family_member"))
           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "accountId"), 
             persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "account_id")),
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "familyId"), 
             persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "family_id"))]
           []]
        []
        []
        (containers-0.5.7.1:Data.Map.Base.fromList [])
        False)
       {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "accountId"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "account_id"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "AccountId"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy GHC.Int.Int64))
                                                                     []
                                                                     True
                                                                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "Account"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just
                                                                              (packPTH "Data.Int"))
                                                                           (packPTH "Int64"))),
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "familyId"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "family_id"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "FamilyId"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy GHC.Int.Int64))
                                                                     []
                                                                     True
                                                                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "Family"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just
                                                                              (packPTH "Data.Int"))
                                                                           (packPTH "Int64"))),
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "joined"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "joined"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "UTCTime"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy UTCTime))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "invitedBy"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "invited_by"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH
                                                                           "InvitationDelivery"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy InvitationDelivery))
                                                                     [packPTH "Maybe"]
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference],
        persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                   (packPTH "Id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                   (packPTH "id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                   Nothing
                                                                   (packPTH "FamilyAccountId"))
                                                                (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                   (Data.Proxy.Proxy ::
                                                                      Data.Proxy.Proxy GHC.Int.Int64))
                                                                []
                                                                True
                                                                (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "FamilyAccount"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      (Just (packPTH "Data.Int"))
                                                                      (packPTH "Int64")))},
     (persistent-2.6:Database.Persist.Types.Base.EntityDef
        (persistent-2.6:Database.Persist.Types.Base.HaskellName
           (packPTH "Invitation"))
        (persistent-2.6:Database.Persist.Types.Base.DBName
           (packPTH "invitation"))
        (persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Id"))
           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "InvitationId"))
           persistent-2.6:Database.Persist.Types.Base.SqlInt64
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Invitation"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
        []
        [persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "secret"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "secret"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "Secret"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for secret"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "familyId"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "family_id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "FamilyId"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for familyId"))
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Family"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "created"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "created"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "UTCTime"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for created"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "delivery"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "delivery"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "InvitationDelivery"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for delivery"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "senderId"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "sender_id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "DeviceId"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for senderId"))
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Device"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "receiverId"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "receiver_id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "AccountId"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for receiverId"))
           [packPTH "Maybe"]
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Account"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64")))]
        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "SecretInvitation"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "secret_invitation"))
           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "secret"), 
             persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "secret"))]
           []]
        []
        [packPTH "Show", packPTH "Generic"]
        (containers-0.5.7.1:Data.Map.Base.fromList [])
        False)
       {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "secret"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "secret"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "Secret"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy Secret))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "familyId"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "family_id"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "FamilyId"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy GHC.Int.Int64))
                                                                     []
                                                                     True
                                                                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "Family"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just
                                                                              (packPTH "Data.Int"))
                                                                           (packPTH "Int64"))),
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "created"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "created"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "UTCTime"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy UTCTime))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "delivery"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "delivery"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH
                                                                           "InvitationDelivery"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy InvitationDelivery))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "senderId"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "sender_id"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "DeviceId"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy GHC.Int.Int64))
                                                                     []
                                                                     True
                                                                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "Device"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just
                                                                              (packPTH "Data.Int"))
                                                                           (packPTH "Int64"))),
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "receiverId"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "receiver_id"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "AccountId"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy GHC.Int.Int64))
                                                                     [packPTH "Maybe"]
                                                                     True
                                                                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "Account"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just
                                                                              (packPTH "Data.Int"))
                                                                           (packPTH "Int64")))],
        persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                   (packPTH "Id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                   (packPTH "id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                   Nothing (packPTH "InvitationId"))
                                                                (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                   (Data.Proxy.Proxy ::
                                                                      Data.Proxy.Proxy GHC.Int.Int64))
                                                                []
                                                                True
                                                                (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Invitation"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      (Just (packPTH "Data.Int"))
                                                                      (packPTH "Int64")))},
     (persistent-2.6:Database.Persist.Types.Base.EntityDef
        (persistent-2.6:Database.Persist.Types.Base.HaskellName
           (packPTH "Device"))
        (persistent-2.6:Database.Persist.Types.Base.DBName
           (packPTH "device"))
        (persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Id"))
           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "DeviceId"))
           persistent-2.6:Database.Persist.Types.Base.SqlInt64
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Device"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
        []
        [persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "name"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "name"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "Text"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for name"))
           [packPTH "Maybe"]
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "authToken"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "auth_token"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "AuthToken"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for authToken"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "accountId"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "account_id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "AccountId"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for accountId"))
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Account"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "lastAccessed"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "last_accessed"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "UTCTime"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for lastAccessed"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "userAgent"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "user_agent"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "Text"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for userAgent"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference]
        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "AuthTokenDevice"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "auth_token_device"))
           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "authToken"), 
             persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "auth_token"))]
           []]
        []
        [packPTH "Generic"]
        (containers-0.5.7.1:Data.Map.Base.fromList [])
        False)
       {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "name"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "name"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "Text"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy Text))
                                                                     [packPTH "Maybe"]
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "authToken"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "auth_token"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "AuthToken"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy AuthToken))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "accountId"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "account_id"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "AccountId"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy GHC.Int.Int64))
                                                                     []
                                                                     True
                                                                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "Account"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just
                                                                              (packPTH "Data.Int"))
                                                                           (packPTH "Int64"))),
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "lastAccessed"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "last_accessed"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "UTCTime"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy UTCTime))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "userAgent"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "user_agent"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "Text"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy Text))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference],
        persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                   (packPTH "Id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                   (packPTH "id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                   Nothing (packPTH "DeviceId"))
                                                                (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                   (Data.Proxy.Proxy ::
                                                                      Data.Proxy.Proxy GHC.Int.Int64))
                                                                []
                                                                True
                                                                (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Device"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      (Just (packPTH "Data.Int"))
                                                                      (packPTH "Int64")))},
     (persistent-2.6:Database.Persist.Types.Base.EntityDef
        (persistent-2.6:Database.Persist.Types.Base.HaskellName
           (packPTH "User"))
        (persistent-2.6:Database.Persist.Types.Base.DBName
           (packPTH "user"))
        (persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Id"))
           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "UserId"))
           persistent-2.6:Database.Persist.Types.Base.SqlInt64
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "User"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
        []
        [persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "login"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "login"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "Text"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for login"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "password"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "password"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "Text"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for password"))
           []
           True
           persistent-2.6:Database.Persist.Types.Base.NoReference,
         persistent-2.6:Database.Persist.Types.Base.FieldDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "accountId"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "account_id"))
           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
              Nothing (packPTH "AccountId"))
           (persistent-2.6:Database.Persist.Types.Base.SqlOther
              (packPTH "SqlType unset for accountId"))
           []
           True
           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Account"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Data.Int")) (packPTH "Int64")))]
        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "AccountIdUser"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "account_id_user"))
           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "accountId"), 
             persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "account_id"))]
           []]
        []
        []
        (containers-0.5.7.1:Data.Map.Base.fromList [])
        False)
       {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "login"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "login"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "Text"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy Text))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "password"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "password"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing (packPTH "Text"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy Text))
                                                                     []
                                                                     True
                                                                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                        (packPTH "accountId"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                        (packPTH "account_id"))
                                                                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                        Nothing
                                                                        (packPTH "AccountId"))
                                                                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                        (Data.Proxy.Proxy ::
                                                                           Data.Proxy.Proxy GHC.Int.Int64))
                                                                     []
                                                                     True
                                                                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "Account"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just
                                                                              (packPTH "Data.Int"))
                                                                           (packPTH "Int64")))],
        persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                   (packPTH "Id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                   (packPTH "id"))
                                                                (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                   Nothing (packPTH "UserId"))
                                                                (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                   (Data.Proxy.Proxy ::
                                                                      Data.Proxy.Proxy GHC.Int.Int64))
                                                                []
                                                                True
                                                                (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "User"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      (Just (packPTH "Data.Int"))
                                                                      (packPTH "Int64")))}]
Linking Template Haskell (Gonimo.Types,ThRunner2)
src/Gonimo/Db/Entities.hs:(28,1)-(71,2): Splicing declarations
    share
      [mkPersist (sqlSettings {mpsGeneric = False}),
       mkMigrate "migrateAll"]
      ([(persistent-2.6:Database.Persist.Types.Base.EntityDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Account"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "account"))
           (persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Id"))
              (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "AccountId"))
              persistent-2.6:Database.Persist.Types.Base.SqlInt64
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Account"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))))
           []
           [persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "created"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "created"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "UTCTime"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for created"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference]
           []
           []
           [packPTH "Generic"]
           (containers-0.5.7.1:Data.Map.Base.fromList [])
           False)
          {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "created"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "created"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "UTCTime"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy UTCTime))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference],
           persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                      (packPTH "id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      Nothing (packPTH "AccountId"))
                                                                   (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                      (Data.Proxy.Proxy ::
                                                                         Data.Proxy.Proxy GHC.Int.Int64))
                                                                   []
                                                                   True
                                                                   (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                      (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                         (packPTH "Account"))
                                                                      (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                         (Just (packPTH "Data.Int"))
                                                                         (packPTH "Int64")))},
        (persistent-2.6:Database.Persist.Types.Base.EntityDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Family"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "family"))
           (persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Id"))
              (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "FamilyId"))
              persistent-2.6:Database.Persist.Types.Base.SqlInt64
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Family"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))))
           []
           [persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "name"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "name"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 (Just (packPTH "Server")) (packPTH "FamilyName"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for name"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "created"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "created"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "UTCTime"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for created"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "lastAccessed"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "last_accessed"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "UTCTime"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for lastAccessed"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "lastUsedBabyNames"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "last_used_baby_names"))
              (persistent-2.6:Database.Persist.Types.Base.FTList
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    Nothing (packPTH "Text")))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for lastUsedBabyNames"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference]
           []
           []
           [packPTH "Generic", packPTH "Show"]
           (containers-0.5.7.1:Data.Map.Base.fromList [])
           False)
          {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "name"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "name"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           (Just (packPTH "Server"))
                                                                           (packPTH "FamilyName"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy Server.FamilyName))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "created"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "created"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "UTCTime"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy UTCTime))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "lastAccessed"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH
                                                                              "last_accessed"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "UTCTime"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy UTCTime))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH
                                                                              "lastUsedBabyNames"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH
                                                                              "last_used_baby_names"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTList
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              Nothing
                                                                              (packPTH "Text")))
                                                                        persistent-2.6:Database.Persist.Types.Base.SqlString
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference],
           persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                      (packPTH "id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      Nothing (packPTH "FamilyId"))
                                                                   (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                      (Data.Proxy.Proxy ::
                                                                         Data.Proxy.Proxy GHC.Int.Int64))
                                                                   []
                                                                   True
                                                                   (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                      (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                         (packPTH "Family"))
                                                                      (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                         (Just (packPTH "Data.Int"))
                                                                         (packPTH "Int64")))},
        (persistent-2.6:Database.Persist.Types.Base.EntityDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "FamilyAccount"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "family_account"))
           (persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Id"))
              (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "FamilyAccountId"))
              persistent-2.6:Database.Persist.Types.Base.SqlInt64
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "FamilyAccount"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))))
           []
           [persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "accountId"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "account_id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "AccountId"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for accountId"))
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Account"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))),
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "familyId"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "family_id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "FamilyId"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for familyId"))
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Family"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))),
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "joined"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "joined"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "UTCTime"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for joined"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "invitedBy"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "invited_by"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "InvitationDelivery"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for invitedBy"))
              [packPTH "Maybe"]
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference]
           [persistent-2.6:Database.Persist.Types.Base.UniqueDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "FamilyMember"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "family_member"))
              [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "accountId"), 
                persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "account_id")),
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "familyId"), 
                persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "family_id"))]
              []]
           []
           []
           (containers-0.5.7.1:Data.Map.Base.fromList [])
           False)
          {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "accountId"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "account_id"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "AccountId"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy GHC.Int.Int64))
                                                                        []
                                                                        True
                                                                        (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                              (packPTH "Account"))
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              (Just
                                                                                 (packPTH
                                                                                    "Data.Int"))
                                                                              (packPTH "Int64"))),
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "familyId"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "family_id"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "FamilyId"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy GHC.Int.Int64))
                                                                        []
                                                                        True
                                                                        (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                              (packPTH "Family"))
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              (Just
                                                                                 (packPTH
                                                                                    "Data.Int"))
                                                                              (packPTH "Int64"))),
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "joined"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "joined"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "UTCTime"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy UTCTime))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "invitedBy"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "invited_by"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH
                                                                              "InvitationDelivery"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy InvitationDelivery))
                                                                        [packPTH "Maybe"]
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference],
           persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                      (packPTH "id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      Nothing
                                                                      (packPTH "FamilyAccountId"))
                                                                   (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                      (Data.Proxy.Proxy ::
                                                                         Data.Proxy.Proxy GHC.Int.Int64))
                                                                   []
                                                                   True
                                                                   (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                      (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                         (packPTH "FamilyAccount"))
                                                                      (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                         (Just (packPTH "Data.Int"))
                                                                         (packPTH "Int64")))},
        (persistent-2.6:Database.Persist.Types.Base.EntityDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Invitation"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "invitation"))
           (persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Id"))
              (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "InvitationId"))
              persistent-2.6:Database.Persist.Types.Base.SqlInt64
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Invitation"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))))
           []
           [persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "secret"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "secret"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "Secret"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for secret"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "familyId"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "family_id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "FamilyId"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for familyId"))
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Family"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))),
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "created"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "created"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "UTCTime"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for created"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "delivery"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "delivery"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "InvitationDelivery"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for delivery"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "senderId"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "sender_id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "DeviceId"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for senderId"))
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Device"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))),
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "receiverId"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "receiver_id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "AccountId"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for receiverId"))
              [packPTH "Maybe"]
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Account"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64")))]
           [persistent-2.6:Database.Persist.Types.Base.UniqueDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "SecretInvitation"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "secret_invitation"))
              [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "secret"), 
                persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "secret"))]
              []]
           []
           [packPTH "Show", packPTH "Generic"]
           (containers-0.5.7.1:Data.Map.Base.fromList [])
           False)
          {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "secret"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "secret"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "Secret"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy Secret))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "familyId"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "family_id"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "FamilyId"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy GHC.Int.Int64))
                                                                        []
                                                                        True
                                                                        (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                              (packPTH "Family"))
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              (Just
                                                                                 (packPTH
                                                                                    "Data.Int"))
                                                                              (packPTH "Int64"))),
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "created"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "created"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "UTCTime"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy UTCTime))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "delivery"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "delivery"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH
                                                                              "InvitationDelivery"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy InvitationDelivery))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "senderId"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "sender_id"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "DeviceId"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy GHC.Int.Int64))
                                                                        []
                                                                        True
                                                                        (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                              (packPTH "Device"))
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              (Just
                                                                                 (packPTH
                                                                                    "Data.Int"))
                                                                              (packPTH "Int64"))),
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "receiverId"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "receiver_id"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "AccountId"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy GHC.Int.Int64))
                                                                        [packPTH "Maybe"]
                                                                        True
                                                                        (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                              (packPTH "Account"))
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              (Just
                                                                                 (packPTH
                                                                                    "Data.Int"))
                                                                              (packPTH "Int64")))],
           persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                      (packPTH "id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      Nothing
                                                                      (packPTH "InvitationId"))
                                                                   (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                      (Data.Proxy.Proxy ::
                                                                         Data.Proxy.Proxy GHC.Int.Int64))
                                                                   []
                                                                   True
                                                                   (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                      (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                         (packPTH "Invitation"))
                                                                      (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                         (Just (packPTH "Data.Int"))
                                                                         (packPTH "Int64")))},
        (persistent-2.6:Database.Persist.Types.Base.EntityDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "Device"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "device"))
           (persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Id"))
              (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "DeviceId"))
              persistent-2.6:Database.Persist.Types.Base.SqlInt64
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Device"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))))
           []
           [persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "name"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "name"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "Text"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for name"))
              [packPTH "Maybe"]
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "authToken"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "auth_token"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "AuthToken"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for authToken"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "accountId"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "account_id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "AccountId"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for accountId"))
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Account"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))),
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "lastAccessed"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "last_accessed"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "UTCTime"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for lastAccessed"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "userAgent"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "user_agent"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "Text"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for userAgent"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference]
           [persistent-2.6:Database.Persist.Types.Base.UniqueDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "AuthTokenDevice"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "auth_token_device"))
              [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "authToken"), 
                persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "auth_token"))]
              []]
           []
           [packPTH "Generic"]
           (containers-0.5.7.1:Data.Map.Base.fromList [])
           False)
          {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "name"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "name"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing (packPTH "Text"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy Text))
                                                                        [packPTH "Maybe"]
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "authToken"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "auth_token"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "AuthToken"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy AuthToken))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "accountId"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "account_id"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "AccountId"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy GHC.Int.Int64))
                                                                        []
                                                                        True
                                                                        (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                              (packPTH "Account"))
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              (Just
                                                                                 (packPTH
                                                                                    "Data.Int"))
                                                                              (packPTH "Int64"))),
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "lastAccessed"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH
                                                                              "last_accessed"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "UTCTime"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy UTCTime))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "userAgent"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "user_agent"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing (packPTH "Text"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy Text))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference],
           persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                      (packPTH "id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      Nothing (packPTH "DeviceId"))
                                                                   (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                      (Data.Proxy.Proxy ::
                                                                         Data.Proxy.Proxy GHC.Int.Int64))
                                                                   []
                                                                   True
                                                                   (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                      (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                         (packPTH "Device"))
                                                                      (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                         (Just (packPTH "Data.Int"))
                                                                         (packPTH "Int64")))},
        (persistent-2.6:Database.Persist.Types.Base.EntityDef
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "User"))
           (persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "user"))
           (persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "Id"))
              (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "UserId"))
              persistent-2.6:Database.Persist.Types.Base.SqlInt64
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "User"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64"))))
           []
           [persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "login"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "login"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "Text"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for login"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "password"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "password"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "Text"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for password"))
              []
              True
              persistent-2.6:Database.Persist.Types.Base.NoReference,
            persistent-2.6:Database.Persist.Types.Base.FieldDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "accountId"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "account_id"))
              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                 Nothing (packPTH "AccountId"))
              (persistent-2.6:Database.Persist.Types.Base.SqlOther
                 (packPTH "SqlType unset for accountId"))
              []
              True
              (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                 (persistent-2.6:Database.Persist.Types.Base.HaskellName
                    (packPTH "Account"))
                 (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                    (Just (packPTH "Data.Int")) (packPTH "Int64")))]
           [persistent-2.6:Database.Persist.Types.Base.UniqueDef
              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                 (packPTH "AccountIdUser"))
              (persistent-2.6:Database.Persist.Types.Base.DBName
                 (packPTH "account_id_user"))
              [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "accountId"), 
                persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "account_id"))]
              []]
           []
           []
           (containers-0.5.7.1:Data.Map.Base.fromList [])
           False)
          {persistent-2.6:Database.Persist.Types.Base.entityFields = [persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "login"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "login"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing (packPTH "Text"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy Text))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "password"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "password"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing (packPTH "Text"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy Text))
                                                                        []
                                                                        True
                                                                        persistent-2.6:Database.Persist.Types.Base.NoReference,
                                                                      persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                           (packPTH "accountId"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                           (packPTH "account_id"))
                                                                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                           Nothing
                                                                           (packPTH "AccountId"))
                                                                        (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                           (Data.Proxy.Proxy ::
                                                                              Data.Proxy.Proxy GHC.Int.Int64))
                                                                        []
                                                                        True
                                                                        (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                              (packPTH "Account"))
                                                                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                              (Just
                                                                                 (packPTH
                                                                                    "Data.Int"))
                                                                              (packPTH "Int64")))],
           persistent-2.6:Database.Persist.Types.Base.entityId = persistent-2.6:Database.Persist.Types.Base.FieldDef
                                                                   (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                      (packPTH "Id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.DBName
                                                                      (packPTH "id"))
                                                                   (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                      Nothing (packPTH "UserId"))
                                                                   (persistent-2.6:Database.Persist.Sql.Class.sqlType
                                                                      (Data.Proxy.Proxy ::
                                                                         Data.Proxy.Proxy GHC.Int.Int64))
                                                                   []
                                                                   True
                                                                   (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                                                                      (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                                                         (packPTH "User"))
                                                                      (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                                                         (Just (packPTH "Data.Int"))
                                                                         (packPTH "Int64")))}])
  ======>
    instance persistent-2.6:Database.Persist.Class.PersistField.PersistField Account where
      persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
        = \ ent_aubx
            -> (persistent-2.6:Database.Persist.Types.Base.PersistMap
                $ (zip
                     (map Data.Text.pack ["created"])
                     ((map
                         persistent-2.6:Database.Persist.Class.PersistField.toPersistValue)
                      $ (persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
                           ent_aubx))))
      persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
        = ((\ x_auby
              -> let
                   columns_aubz
                     = unordered-containers-0.2.7.0:Data.HashMap.Strict.fromList x_auby
                 in
                   (persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
                    $ ((map
                          (\ name_aubA
                             -> case
                                    unordered-containers-0.2.7.0:Data.HashMap.Base.lookup
                                      (Data.Text.pack name_aubA) columns_aubz
                                of {
                                  Just v_aubB -> v_aubB
                                  Nothing
                                    -> persistent-2.6:Database.Persist.Types.Base.PersistNull }))
                       $ ["created"])))
           Control.Monad.<=<
             persistent-2.6:Database.Persist.Class.PersistField.getPersistMap)
    instance persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql Account where
      persistent-2.6:Database.Persist.Sql.Class.sqlType _
        = persistent-2.6:Database.Persist.Types.Base.SqlString
    instance persistent-2.6:Database.Persist.Class.PersistField.PersistField Family where
      persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
        = \ ent_aubC
            -> (persistent-2.6:Database.Persist.Types.Base.PersistMap
                $ (zip
                     (map
                        Data.Text.pack
                        ["name", "created", "lastAccessed", "lastUsedBabyNames"])
                     ((map
                         persistent-2.6:Database.Persist.Class.PersistField.toPersistValue)
                      $ (persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
                           ent_aubC))))
      persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
        = ((\ x_aubD
              -> let
                   columns_aubE
                     = unordered-containers-0.2.7.0:Data.HashMap.Strict.fromList x_aubD
                 in
                   (persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
                    $ ((map
                          (\ name_aubF
                             -> case
                                    unordered-containers-0.2.7.0:Data.HashMap.Base.lookup
                                      (Data.Text.pack name_aubF) columns_aubE
                                of {
                                  Just v_aubG -> v_aubG
                                  Nothing
                                    -> persistent-2.6:Database.Persist.Types.Base.PersistNull }))
                       $ ["name", "created", "lastAccessed", "lastUsedBabyNames"])))
           Control.Monad.<=<
             persistent-2.6:Database.Persist.Class.PersistField.getPersistMap)
    instance persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql Family where
      persistent-2.6:Database.Persist.Sql.Class.sqlType _
        = persistent-2.6:Database.Persist.Types.Base.SqlString
    instance persistent-2.6:Database.Persist.Class.PersistField.PersistField FamilyAccount where
      persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
        = \ ent_aubH
            -> (persistent-2.6:Database.Persist.Types.Base.PersistMap
                $ (zip
                     (map
                        Data.Text.pack ["accountId", "familyId", "joined", "invitedBy"])
                     ((map
                         persistent-2.6:Database.Persist.Class.PersistField.toPersistValue)
                      $ (persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
                           ent_aubH))))
      persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
        = ((\ x_aubI
              -> let
                   columns_aubJ
                     = unordered-containers-0.2.7.0:Data.HashMap.Strict.fromList x_aubI
                 in
                   (persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
                    $ ((map
                          (\ name_aubK
                             -> case
                                    unordered-containers-0.2.7.0:Data.HashMap.Base.lookup
                                      (Data.Text.pack name_aubK) columns_aubJ
                                of {
                                  Just v_aubL -> v_aubL
                                  Nothing
                                    -> persistent-2.6:Database.Persist.Types.Base.PersistNull }))
                       $ ["accountId", "familyId", "joined", "invitedBy"])))
           Control.Monad.<=<
             persistent-2.6:Database.Persist.Class.PersistField.getPersistMap)
    instance persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql FamilyAccount where
      persistent-2.6:Database.Persist.Sql.Class.sqlType _
        = persistent-2.6:Database.Persist.Types.Base.SqlString
    instance persistent-2.6:Database.Persist.Class.PersistField.PersistField Invitation where
      persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
        = \ ent_aubM
            -> (persistent-2.6:Database.Persist.Types.Base.PersistMap
                $ (zip
                     (map
                        Data.Text.pack
                        ["secret", "familyId", "created", "delivery", "senderId",
                         "receiverId"])
                     ((map
                         persistent-2.6:Database.Persist.Class.PersistField.toPersistValue)
                      $ (persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
                           ent_aubM))))
      persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
        = ((\ x_aubN
              -> let
                   columns_aubO
                     = unordered-containers-0.2.7.0:Data.HashMap.Strict.fromList x_aubN
                 in
                   (persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
                    $ ((map
                          (\ name_aubP
                             -> case
                                    unordered-containers-0.2.7.0:Data.HashMap.Base.lookup
                                      (Data.Text.pack name_aubP) columns_aubO
                                of {
                                  Just v_aubQ -> v_aubQ
                                  Nothing
                                    -> persistent-2.6:Database.Persist.Types.Base.PersistNull }))
                       $ ["secret", "familyId", "created", "delivery", "senderId",
                          "receiverId"])))
           Control.Monad.<=<
             persistent-2.6:Database.Persist.Class.PersistField.getPersistMap)
    instance persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql Invitation where
      persistent-2.6:Database.Persist.Sql.Class.sqlType _
        = persistent-2.6:Database.Persist.Types.Base.SqlString
    instance persistent-2.6:Database.Persist.Class.PersistField.PersistField Device where
      persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
        = \ ent_aubR
            -> (persistent-2.6:Database.Persist.Types.Base.PersistMap
                $ (zip
                     (map
                        Data.Text.pack
                        ["name", "authToken", "accountId", "lastAccessed", "userAgent"])
                     ((map
                         persistent-2.6:Database.Persist.Class.PersistField.toPersistValue)
                      $ (persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
                           ent_aubR))))
      persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
        = ((\ x_aubS
              -> let
                   columns_aubT
                     = unordered-containers-0.2.7.0:Data.HashMap.Strict.fromList x_aubS
                 in
                   (persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
                    $ ((map
                          (\ name_aubU
                             -> case
                                    unordered-containers-0.2.7.0:Data.HashMap.Base.lookup
                                      (Data.Text.pack name_aubU) columns_aubT
                                of {
                                  Just v_aubV -> v_aubV
                                  Nothing
                                    -> persistent-2.6:Database.Persist.Types.Base.PersistNull }))
                       $ ["name", "authToken", "accountId", "lastAccessed",
                          "userAgent"])))
           Control.Monad.<=<
             persistent-2.6:Database.Persist.Class.PersistField.getPersistMap)
    instance persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql Device where
      persistent-2.6:Database.Persist.Sql.Class.sqlType _
        = persistent-2.6:Database.Persist.Types.Base.SqlString
    instance persistent-2.6:Database.Persist.Class.PersistField.PersistField User where
      persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
        = \ ent_aubW
            -> (persistent-2.6:Database.Persist.Types.Base.PersistMap
                $ (zip
                     (map Data.Text.pack ["login", "password", "accountId"])
                     ((map
                         persistent-2.6:Database.Persist.Class.PersistField.toPersistValue)
                      $ (persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
                           ent_aubW))))
      persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
        = ((\ x_aubX
              -> let
                   columns_aubY
                     = unordered-containers-0.2.7.0:Data.HashMap.Strict.fromList x_aubX
                 in
                   (persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
                    $ ((map
                          (\ name_aubZ
                             -> case
                                    unordered-containers-0.2.7.0:Data.HashMap.Base.lookup
                                      (Data.Text.pack name_aubZ) columns_aubY
                                of {
                                  Just v_auc0 -> v_auc0
                                  Nothing
                                    -> persistent-2.6:Database.Persist.Types.Base.PersistNull }))
                       $ ["login", "password", "accountId"])))
           Control.Monad.<=<
             persistent-2.6:Database.Persist.Class.PersistField.getPersistMap)
    instance persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql User where
      persistent-2.6:Database.Persist.Sql.Class.sqlType _
        = persistent-2.6:Database.Persist.Types.Base.SqlString
    data Account
      = Account {accountCreated :: !UTCTime}
      deriving (Generic)
    type AccountId = Key Account
    instance persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntity Account where
      type persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntityBackend Account = Database.Persist.Sql.Types.Internal.SqlBackend
      data persistent-2.6:Database.Persist.Class.PersistEntity.Unique Account
      newtype Key Account
        = AccountKey {unAccountKey :: (persistent-2.6:Database.Persist.Class.PersistStore.BackendKey Database.Persist.Sql.Types.Internal.SqlBackend)}
        deriving (Show,
                  Read,
                  Eq,
                  Ord,
                  path-pieces-0.2.1:Web.PathPieces.PathPiece,
                  Web.HttpApiData.Internal.ToHttpApiData,
                  Web.HttpApiData.Internal.FromHttpApiData,
                  persistent-2.6:Database.Persist.Class.PersistField.PersistField,
                  persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql,
                  ToJSON,
                  FromJSON)
      data persistent-2.6:Database.Persist.Class.PersistEntity.EntityField Account typ
        = typ ~ Key Account => AccountId | typ ~ UTCTime => AccountCreated
      persistent-2.6:Database.Persist.Class.PersistEntity.keyToValues
        = ((ghc-prim-0.5.0.0:GHC.Types.: [])
           . (persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
              . unAccountKey))
      persistent-2.6:Database.Persist.Class.PersistEntity.keyFromValues
        = ((fmap AccountKey)
           . (persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
              . Database.Persist.TH.headNote))
      persistent-2.6:Database.Persist.Class.PersistEntity.entityDef _
        = persistent-2.6:Database.Persist.Types.Base.EntityDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Account"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "account"))
            (persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Id"))
               (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "AccountId"))
               persistent-2.6:Database.Persist.Types.Base.SqlInt64
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Account"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))))
            []
            [persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "created"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "created"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "UTCTime"))
               persistent-2.6:Database.Persist.Types.Base.SqlDayTime
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference]
            []
            []
            [packPTH "Generic"]
            (containers-0.5.7.1:Data.Map.Base.fromList [])
            False
      persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
        (Account x_auc1)
        = [persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_auc1]
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        [x1_auc3]
        = Account
          <$>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "created")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x1_auc3
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        x_auc2
        = (Left
           $ (mappend
                (packPTH "Account: fromPersistValues failed on: ")
                (Data.Text.pack $ (show x_auc2))))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToFieldNames
        _
        = error "Degenerate case, should never happen"
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToValues
        _
        = error "Degenerate case, should never happen"
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueKeys
        (Account _created_auc4)
        = []
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        AccountId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Id"))
            (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "AccountId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Account"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        AccountCreated
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "created"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "created"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "UTCTime"))
            persistent-2.6:Database.Persist.Types.Base.SqlDayTime
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistIdField
        = AccountId
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        AccountId
        = lensPTH
            persistent-2.6:Database.Persist.Class.PersistEntity.entityKey
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity _
                                                                           value_auc5)
               key_auc6
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_auc6 value_auc5)
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        AccountCreated
        = lensPTH
            (accountCreated
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_auc7
                                                                           value_auc8)
               x_auc9
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_auc7 (value_auc8 {accountCreated = x_auc9}))
    instance persistent-2.6:Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Account where
      persistent-2.6:Database.Persist.Class.PersistStore.toBackendKey
        = unAccountKey
      persistent-2.6:Database.Persist.Class.PersistStore.fromBackendKey
        = AccountKey
    data Family
      = Family {familyName :: !Server.FamilyName,
                familyCreated :: !UTCTime,
                familyLastAccessed :: !UTCTime,
                familyLastUsedBabyNames :: ![Text]}
      deriving (Generic, Show)
    type FamilyId = Key Family
    instance persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntity Family where
      type persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntityBackend Family = Database.Persist.Sql.Types.Internal.SqlBackend
      data persistent-2.6:Database.Persist.Class.PersistEntity.Unique Family
      newtype Key Family
        = FamilyKey {unFamilyKey :: (persistent-2.6:Database.Persist.Class.PersistStore.BackendKey Database.Persist.Sql.Types.Internal.SqlBackend)}
        deriving (Show,
                  Read,
                  Eq,
                  Ord,
                  path-pieces-0.2.1:Web.PathPieces.PathPiece,
                  Web.HttpApiData.Internal.ToHttpApiData,
                  Web.HttpApiData.Internal.FromHttpApiData,
                  persistent-2.6:Database.Persist.Class.PersistField.PersistField,
                  persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql,
                  ToJSON,
                  FromJSON)
      data persistent-2.6:Database.Persist.Class.PersistEntity.EntityField Family typ
        = typ ~ Key Family => FamilyId |
          typ ~ Server.FamilyName => FamilyName |
          typ ~ UTCTime => FamilyCreated |
          typ ~ UTCTime => FamilyLastAccessed |
          typ ~ [Text] => FamilyLastUsedBabyNames
      persistent-2.6:Database.Persist.Class.PersistEntity.keyToValues
        = ((ghc-prim-0.5.0.0:GHC.Types.: [])
           . (persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
              . unFamilyKey))
      persistent-2.6:Database.Persist.Class.PersistEntity.keyFromValues
        = ((fmap FamilyKey)
           . (persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
              . Database.Persist.TH.headNote))
      persistent-2.6:Database.Persist.Class.PersistEntity.entityDef _
        = persistent-2.6:Database.Persist.Types.Base.EntityDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Family"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "family"))
            (persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Id"))
               (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "FamilyId"))
               persistent-2.6:Database.Persist.Types.Base.SqlInt64
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Family"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))))
            []
            [persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "name"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "name"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Server")) (packPTH "FamilyName"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "created"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "created"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "UTCTime"))
               persistent-2.6:Database.Persist.Types.Base.SqlDayTime
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "lastAccessed"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "last_accessed"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "UTCTime"))
               persistent-2.6:Database.Persist.Types.Base.SqlDayTime
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "lastUsedBabyNames"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "last_used_baby_names"))
               (persistent-2.6:Database.Persist.Types.Base.FTList
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     Nothing (packPTH "Text")))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference]
            []
            []
            [packPTH "Generic", packPTH "Show"]
            (containers-0.5.7.1:Data.Map.Base.fromList [])
            False
      persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
        (Family x_auca x_aucb x_aucc x_aucd)
        = [persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_auca,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucb,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucc,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucd]
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        [x1_aucf, x2_aucg, x3_auch, x4_auci]
        = Family
          <$>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "name")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x1_aucf
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "created")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x2_aucg
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "lastAccessed")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x3_auch
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "lastUsedBabyNames")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x4_auci
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        x_auce
        = (Left
           $ (mappend
                (packPTH "Family: fromPersistValues failed on: ")
                (Data.Text.pack $ (show x_auce))))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToFieldNames
        _
        = error "Degenerate case, should never happen"
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToValues
        _
        = error "Degenerate case, should never happen"
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueKeys
        (Family _name_aucj
                _created_auck
                _lastAccessed_aucl
                _lastUsedBabyNames_aucm)
        = []
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Id"))
            (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "FamilyId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Family"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyName
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "name"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "name"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               (Just (packPTH "Server")) (packPTH "FamilyName"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyCreated
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "created"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "created"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "UTCTime"))
            persistent-2.6:Database.Persist.Types.Base.SqlDayTime
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyLastAccessed
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "lastAccessed"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "last_accessed"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "UTCTime"))
            persistent-2.6:Database.Persist.Types.Base.SqlDayTime
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyLastUsedBabyNames
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "lastUsedBabyNames"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "last_used_baby_names"))
            (persistent-2.6:Database.Persist.Types.Base.FTList
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "Text")))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistIdField
        = FamilyId
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyId
        = lensPTH
            persistent-2.6:Database.Persist.Class.PersistEntity.entityKey
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity _
                                                                           value_aucn)
               key_auco
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_auco value_aucn)
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyName
        = lensPTH
            (familyName
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucp
                                                                           value_aucq)
               x_aucr
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucp (value_aucq {familyName = x_aucr}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyCreated
        = lensPTH
            (familyCreated
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucp
                                                                           value_aucq)
               x_aucr
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucp (value_aucq {familyCreated = x_aucr}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyLastAccessed
        = lensPTH
            (familyLastAccessed
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucp
                                                                           value_aucq)
               x_aucr
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucp (value_aucq {familyLastAccessed = x_aucr}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyLastUsedBabyNames
        = lensPTH
            (familyLastUsedBabyNames
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucp
                                                                           value_aucq)
               x_aucr
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucp (value_aucq {familyLastUsedBabyNames = x_aucr}))
    instance persistent-2.6:Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Family where
      persistent-2.6:Database.Persist.Class.PersistStore.toBackendKey
        = unFamilyKey
      persistent-2.6:Database.Persist.Class.PersistStore.fromBackendKey
        = FamilyKey
    data FamilyAccount
      = FamilyAccount {familyAccountAccountId :: !(Key Account),
                       familyAccountFamilyId :: !(Key Family),
                       familyAccountJoined :: !UTCTime,
                       familyAccountInvitedBy :: !(Maybe InvitationDelivery)}
    type FamilyAccountId = Key FamilyAccount
    instance persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntity FamilyAccount where
      type persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntityBackend FamilyAccount = Database.Persist.Sql.Types.Internal.SqlBackend
      data persistent-2.6:Database.Persist.Class.PersistEntity.Unique FamilyAccount
        = FamilyMember (Key Account) (Key Family)
      newtype Key FamilyAccount
        = FamilyAccountKey {unFamilyAccountKey :: (persistent-2.6:Database.Persist.Class.PersistStore.BackendKey Database.Persist.Sql.Types.Internal.SqlBackend)}
        deriving (Show,
                  Read,
                  Eq,
                  Ord,
                  path-pieces-0.2.1:Web.PathPieces.PathPiece,
                  Web.HttpApiData.Internal.ToHttpApiData,
                  Web.HttpApiData.Internal.FromHttpApiData,
                  persistent-2.6:Database.Persist.Class.PersistField.PersistField,
                  persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql,
                  ToJSON,
                  FromJSON)
      data persistent-2.6:Database.Persist.Class.PersistEntity.EntityField FamilyAccount typ
        = typ ~ Key FamilyAccount => FamilyAccountId |
          typ ~ Key Account => FamilyAccountAccountId |
          typ ~ Key Family => FamilyAccountFamilyId |
          typ ~ UTCTime => FamilyAccountJoined |
          typ ~ Maybe InvitationDelivery => FamilyAccountInvitedBy
      persistent-2.6:Database.Persist.Class.PersistEntity.keyToValues
        = ((ghc-prim-0.5.0.0:GHC.Types.: [])
           . (persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
              . unFamilyAccountKey))
      persistent-2.6:Database.Persist.Class.PersistEntity.keyFromValues
        = ((fmap FamilyAccountKey)
           . (persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
              . Database.Persist.TH.headNote))
      persistent-2.6:Database.Persist.Class.PersistEntity.entityDef _
        = persistent-2.6:Database.Persist.Types.Base.EntityDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "FamilyAccount"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "family_account"))
            (persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Id"))
               (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "FamilyAccountId"))
               persistent-2.6:Database.Persist.Types.Base.SqlInt64
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "FamilyAccount"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))))
            []
            [persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "accountId"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "account_id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "AccountId"))
               (persistent-2.6:Database.Persist.Sql.Class.sqlType
                  (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Account"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))),
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "familyId"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "family_id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "FamilyId"))
               (persistent-2.6:Database.Persist.Sql.Class.sqlType
                  (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Family"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))),
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "joined"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "joined"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "UTCTime"))
               persistent-2.6:Database.Persist.Types.Base.SqlDayTime
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "invitedBy"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "invited_by"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "InvitationDelivery"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               [packPTH "Maybe"]
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference]
            [persistent-2.6:Database.Persist.Types.Base.UniqueDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "FamilyMember"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "family_member"))
               [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                   (packPTH "accountId"), 
                 persistent-2.6:Database.Persist.Types.Base.DBName
                   (packPTH "account_id")),
                (persistent-2.6:Database.Persist.Types.Base.HaskellName
                   (packPTH "familyId"), 
                 persistent-2.6:Database.Persist.Types.Base.DBName
                   (packPTH "family_id"))]
               []]
            []
            []
            (containers-0.5.7.1:Data.Map.Base.fromList [])
            False
      persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
        (FamilyAccount x_aucs x_auct x_aucu x_aucv)
        = [persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucs,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_auct,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucu,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucv]
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        [x1_aucx, x2_aucy, x3_aucz, x4_aucA]
        = FamilyAccount
          <$>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "accountId")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x1_aucx
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "familyId")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x2_aucy
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "joined")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x3_aucz
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "invitedBy")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x4_aucA
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        x_aucw
        = (Left
           $ (mappend
                (packPTH "FamilyAccount: fromPersistValues failed on: ")
                (Data.Text.pack $ (show x_aucw))))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToFieldNames
        (FamilyMember {})
        = [(persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "accountId"), 
            persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "account_id")),
           (persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "familyId"), 
            persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "family_id"))]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToValues
        (FamilyMember x_aucB x_aucC)
        = [persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
             x_aucB,
           persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
             x_aucC]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueKeys
        (FamilyAccount _accountId_aucD
                       _familyId_aucE
                       _joined_aucF
                       _invitedBy_aucG)
        = [FamilyMember _accountId_aucD _familyId_aucE]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyAccountId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Id"))
            (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "FamilyAccountId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "FamilyAccount"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyAccountAccountId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "accountId"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "account_id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "AccountId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Account"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyAccountFamilyId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "familyId"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "family_id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "FamilyId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Family"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyAccountJoined
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "joined"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "joined"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "UTCTime"))
            persistent-2.6:Database.Persist.Types.Base.SqlDayTime
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        FamilyAccountInvitedBy
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "invitedBy"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "invited_by"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "InvitationDelivery"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            [packPTH "Maybe"]
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistIdField
        = FamilyAccountId
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyAccountId
        = lensPTH
            persistent-2.6:Database.Persist.Class.PersistEntity.entityKey
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity _
                                                                           value_aucH)
               key_aucI
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucI value_aucH)
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyAccountAccountId
        = lensPTH
            (familyAccountAccountId
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucJ
                                                                           value_aucK)
               x_aucL
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucJ (value_aucK {familyAccountAccountId = x_aucL}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyAccountFamilyId
        = lensPTH
            (familyAccountFamilyId
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucJ
                                                                           value_aucK)
               x_aucL
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucJ (value_aucK {familyAccountFamilyId = x_aucL}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyAccountJoined
        = lensPTH
            (familyAccountJoined
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucJ
                                                                           value_aucK)
               x_aucL
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucJ (value_aucK {familyAccountJoined = x_aucL}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        FamilyAccountInvitedBy
        = lensPTH
            (familyAccountInvitedBy
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aucJ
                                                                           value_aucK)
               x_aucL
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aucJ (value_aucK {familyAccountInvitedBy = x_aucL}))
    instance persistent-2.6:Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend FamilyAccount where
      persistent-2.6:Database.Persist.Class.PersistStore.toBackendKey
        = unFamilyAccountKey
      persistent-2.6:Database.Persist.Class.PersistStore.fromBackendKey
        = FamilyAccountKey
    data Invitation
      = Invitation {invitationSecret :: !Secret,
                    invitationFamilyId :: !(Key Family),
                    invitationCreated :: !UTCTime,
                    invitationDelivery :: !InvitationDelivery,
                    invitationSenderId :: !(Key Device),
                    invitationReceiverId :: !(Maybe (Key Account))}
      deriving (Show, Generic)
    type InvitationId = Key Invitation
    instance persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntity Invitation where
      type persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntityBackend Invitation = Database.Persist.Sql.Types.Internal.SqlBackend
      data persistent-2.6:Database.Persist.Class.PersistEntity.Unique Invitation
        = SecretInvitation Secret
      newtype Key Invitation
        = InvitationKey {unInvitationKey :: (persistent-2.6:Database.Persist.Class.PersistStore.BackendKey Database.Persist.Sql.Types.Internal.SqlBackend)}
        deriving (Show,
                  Read,
                  Eq,
                  Ord,
                  path-pieces-0.2.1:Web.PathPieces.PathPiece,
                  Web.HttpApiData.Internal.ToHttpApiData,
                  Web.HttpApiData.Internal.FromHttpApiData,
                  persistent-2.6:Database.Persist.Class.PersistField.PersistField,
                  persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql,
                  ToJSON,
                  FromJSON)
      data persistent-2.6:Database.Persist.Class.PersistEntity.EntityField Invitation typ
        = typ ~ Key Invitation => InvitationId |
          typ ~ Secret => InvitationSecret |
          typ ~ Key Family => InvitationFamilyId |
          typ ~ UTCTime => InvitationCreated |
          typ ~ InvitationDelivery => InvitationDelivery |
          typ ~ Key Device => InvitationSenderId |
          typ ~ Maybe (Key Account) => InvitationReceiverId
      persistent-2.6:Database.Persist.Class.PersistEntity.keyToValues
        = ((ghc-prim-0.5.0.0:GHC.Types.: [])
           . (persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
              . unInvitationKey))
      persistent-2.6:Database.Persist.Class.PersistEntity.keyFromValues
        = ((fmap InvitationKey)
           . (persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
              . Database.Persist.TH.headNote))
      persistent-2.6:Database.Persist.Class.PersistEntity.entityDef _
        = persistent-2.6:Database.Persist.Types.Base.EntityDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Invitation"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "invitation"))
            (persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Id"))
               (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "InvitationId"))
               persistent-2.6:Database.Persist.Types.Base.SqlInt64
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Invitation"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))))
            []
            [persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "secret"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "secret"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "Secret"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "familyId"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "family_id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "FamilyId"))
               (persistent-2.6:Database.Persist.Sql.Class.sqlType
                  (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Family"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))),
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "created"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "created"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "UTCTime"))
               persistent-2.6:Database.Persist.Types.Base.SqlDayTime
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "delivery"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "delivery"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "InvitationDelivery"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "senderId"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "sender_id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "DeviceId"))
               (persistent-2.6:Database.Persist.Sql.Class.sqlType
                  (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Device"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))),
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "receiverId"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "receiver_id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "AccountId"))
               (persistent-2.6:Database.Persist.Sql.Class.sqlType
                  (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
               [packPTH "Maybe"]
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Account"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64")))]
            [persistent-2.6:Database.Persist.Types.Base.UniqueDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "SecretInvitation"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "secret_invitation"))
               [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                   (packPTH "secret"), 
                 persistent-2.6:Database.Persist.Types.Base.DBName
                   (packPTH "secret"))]
               []]
            []
            [packPTH "Show", packPTH "Generic"]
            (containers-0.5.7.1:Data.Map.Base.fromList [])
            False
      persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
        (Invitation x_aucM x_aucN x_aucO x_aucP x_aucQ x_aucR)
        = [persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucM,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucN,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucO,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucP,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucQ,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aucR]
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        [x1_aucT, x2_aucU, x3_aucV, x4_aucW, x5_aucX, x6_aucY]
        = Invitation
          <$>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "secret")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x1_aucT
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "familyId")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x2_aucU
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "created")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x3_aucV
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "delivery")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x4_aucW
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "senderId")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x5_aucX
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "receiverId")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x6_aucY
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        x_aucS
        = (Left
           $ (mappend
                (packPTH "Invitation: fromPersistValues failed on: ")
                (Data.Text.pack $ (show x_aucS))))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToFieldNames
        (SecretInvitation {})
        = [(persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "secret"), 
            persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "secret"))]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToValues
        (SecretInvitation x_aucZ)
        = [persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
             x_aucZ]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueKeys
        (Invitation _secret_aud0
                    _familyId_aud1
                    _created_aud2
                    _delivery_aud3
                    _senderId_aud4
                    _receiverId_aud5)
        = [SecretInvitation _secret_aud0]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        InvitationId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Id"))
            (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "InvitationId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Invitation"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        InvitationSecret
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "secret"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "secret"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "Secret"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        InvitationFamilyId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "familyId"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "family_id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "FamilyId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Family"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        InvitationCreated
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "created"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "created"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "UTCTime"))
            persistent-2.6:Database.Persist.Types.Base.SqlDayTime
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        InvitationDelivery
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "delivery"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "delivery"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "InvitationDelivery"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        InvitationSenderId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "senderId"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "sender_id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "DeviceId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Device"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        InvitationReceiverId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "receiverId"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "receiver_id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "AccountId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            [packPTH "Maybe"]
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Account"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistIdField
        = InvitationId
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        InvitationId
        = lensPTH
            persistent-2.6:Database.Persist.Class.PersistEntity.entityKey
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity _
                                                                           value_aud6)
               key_aud7
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aud7 value_aud6)
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        InvitationSecret
        = lensPTH
            (invitationSecret
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aud8
                                                                           value_aud9)
               x_auda
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aud8 (value_aud9 {invitationSecret = x_auda}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        InvitationFamilyId
        = lensPTH
            (invitationFamilyId
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aud8
                                                                           value_aud9)
               x_auda
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aud8 (value_aud9 {invitationFamilyId = x_auda}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        InvitationCreated
        = lensPTH
            (invitationCreated
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aud8
                                                                           value_aud9)
               x_auda
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aud8 (value_aud9 {invitationCreated = x_auda}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        InvitationDelivery
        = lensPTH
            (invitationDelivery
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aud8
                                                                           value_aud9)
               x_auda
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aud8 (value_aud9 {invitationDelivery = x_auda}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        InvitationSenderId
        = lensPTH
            (invitationSenderId
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aud8
                                                                           value_aud9)
               x_auda
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aud8 (value_aud9 {invitationSenderId = x_auda}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        InvitationReceiverId
        = lensPTH
            (invitationReceiverId
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_aud8
                                                                           value_aud9)
               x_auda
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_aud8 (value_aud9 {invitationReceiverId = x_auda}))
    instance persistent-2.6:Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Invitation where
      persistent-2.6:Database.Persist.Class.PersistStore.toBackendKey
        = unInvitationKey
      persistent-2.6:Database.Persist.Class.PersistStore.fromBackendKey
        = InvitationKey
    data Device
      = Device {deviceName :: !(Maybe Text),
                deviceAuthToken :: !AuthToken,
                deviceAccountId :: !(Key Account),
                deviceLastAccessed :: !UTCTime,
                deviceUserAgent :: !Text}
      deriving (Generic)
    type DeviceId = Key Device
    instance persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntity Device where
      type persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntityBackend Device = Database.Persist.Sql.Types.Internal.SqlBackend
      data persistent-2.6:Database.Persist.Class.PersistEntity.Unique Device
        = AuthTokenDevice AuthToken
      newtype Key Device
        = DeviceKey {unDeviceKey :: (persistent-2.6:Database.Persist.Class.PersistStore.BackendKey Database.Persist.Sql.Types.Internal.SqlBackend)}
        deriving (Show,
                  Read,
                  Eq,
                  Ord,
                  path-pieces-0.2.1:Web.PathPieces.PathPiece,
                  Web.HttpApiData.Internal.ToHttpApiData,
                  Web.HttpApiData.Internal.FromHttpApiData,
                  persistent-2.6:Database.Persist.Class.PersistField.PersistField,
                  persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql,
                  ToJSON,
                  FromJSON)
      data persistent-2.6:Database.Persist.Class.PersistEntity.EntityField Device typ
        = typ ~ Key Device => DeviceId |
          typ ~ Maybe Text => DeviceName |
          typ ~ AuthToken => DeviceAuthToken |
          typ ~ Key Account => DeviceAccountId |
          typ ~ UTCTime => DeviceLastAccessed |
          typ ~ Text => DeviceUserAgent
      persistent-2.6:Database.Persist.Class.PersistEntity.keyToValues
        = ((ghc-prim-0.5.0.0:GHC.Types.: [])
           . (persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
              . unDeviceKey))
      persistent-2.6:Database.Persist.Class.PersistEntity.keyFromValues
        = ((fmap DeviceKey)
           . (persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
              . Database.Persist.TH.headNote))
      persistent-2.6:Database.Persist.Class.PersistEntity.entityDef _
        = persistent-2.6:Database.Persist.Types.Base.EntityDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Device"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "device"))
            (persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Id"))
               (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "DeviceId"))
               persistent-2.6:Database.Persist.Types.Base.SqlInt64
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Device"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))))
            []
            [persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "name"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "name"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "Text"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               [packPTH "Maybe"]
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "authToken"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "auth_token"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "AuthToken"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "accountId"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "account_id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "AccountId"))
               (persistent-2.6:Database.Persist.Sql.Class.sqlType
                  (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Account"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))),
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "lastAccessed"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "last_accessed"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "UTCTime"))
               persistent-2.6:Database.Persist.Types.Base.SqlDayTime
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "userAgent"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "user_agent"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "Text"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference]
            [persistent-2.6:Database.Persist.Types.Base.UniqueDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "AuthTokenDevice"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "auth_token_device"))
               [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                   (packPTH "authToken"), 
                 persistent-2.6:Database.Persist.Types.Base.DBName
                   (packPTH "auth_token"))]
               []]
            []
            [packPTH "Generic"]
            (containers-0.5.7.1:Data.Map.Base.fromList [])
            False
      persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
        (Device x_audb x_audc x_audd x_aude x_audf)
        = [persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_audb,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_audc,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_audd,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_aude,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_audf]
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        [x1_audh, x2_audi, x3_audj, x4_audk, x5_audl]
        = Device
          <$>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "name")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x1_audh
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "authToken")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x2_audi
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "accountId")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x3_audj
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "lastAccessed")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x4_audk
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "userAgent")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x5_audl
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        x_audg
        = (Left
           $ (mappend
                (packPTH "Device: fromPersistValues failed on: ")
                (Data.Text.pack $ (show x_audg))))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToFieldNames
        (AuthTokenDevice {})
        = [(persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "authToken"), 
            persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "auth_token"))]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToValues
        (AuthTokenDevice x_audm)
        = [persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
             x_audm]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueKeys
        (Device _name_audn
                _authToken_audo
                _accountId_audp
                _lastAccessed_audq
                _userAgent_audr)
        = [AuthTokenDevice _authToken_audo]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        DeviceId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Id"))
            (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "DeviceId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Device"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        DeviceName
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "name"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "name"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "Text"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            [packPTH "Maybe"]
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        DeviceAuthToken
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "authToken"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "auth_token"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "AuthToken"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        DeviceAccountId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "accountId"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "account_id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "AccountId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Account"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        DeviceLastAccessed
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "lastAccessed"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "last_accessed"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "UTCTime"))
            persistent-2.6:Database.Persist.Types.Base.SqlDayTime
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        DeviceUserAgent
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "userAgent"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "user_agent"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "Text"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistIdField
        = DeviceId
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        DeviceId
        = lensPTH
            persistent-2.6:Database.Persist.Class.PersistEntity.entityKey
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity _
                                                                           value_auds)
               key_audt
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audt value_auds)
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        DeviceName
        = lensPTH
            (deviceName
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audu
                                                                           value_audv)
               x_audw
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audu (value_audv {deviceName = x_audw}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        DeviceAuthToken
        = lensPTH
            (deviceAuthToken
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audu
                                                                           value_audv)
               x_audw
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audu (value_audv {deviceAuthToken = x_audw}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        DeviceAccountId
        = lensPTH
            (deviceAccountId
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audu
                                                                           value_audv)
               x_audw
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audu (value_audv {deviceAccountId = x_audw}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        DeviceLastAccessed
        = lensPTH
            (deviceLastAccessed
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audu
                                                                           value_audv)
               x_audw
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audu (value_audv {deviceLastAccessed = x_audw}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        DeviceUserAgent
        = lensPTH
            (deviceUserAgent
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audu
                                                                           value_audv)
               x_audw
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audu (value_audv {deviceUserAgent = x_audw}))
    instance persistent-2.6:Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Device where
      persistent-2.6:Database.Persist.Class.PersistStore.toBackendKey
        = unDeviceKey
      persistent-2.6:Database.Persist.Class.PersistStore.fromBackendKey
        = DeviceKey
    data User
      = User {userLogin :: !Text,
              userPassword :: !Text,
              userAccountId :: !(Key Account)}
    type UserId = Key User
    instance persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntity User where
      type persistent-2.6:Database.Persist.Class.PersistEntity.PersistEntityBackend User = Database.Persist.Sql.Types.Internal.SqlBackend
      data persistent-2.6:Database.Persist.Class.PersistEntity.Unique User
        = AccountIdUser (Key Account)
      newtype Key User
        = UserKey {unUserKey :: (persistent-2.6:Database.Persist.Class.PersistStore.BackendKey Database.Persist.Sql.Types.Internal.SqlBackend)}
        deriving (Show,
                  Read,
                  Eq,
                  Ord,
                  path-pieces-0.2.1:Web.PathPieces.PathPiece,
                  Web.HttpApiData.Internal.ToHttpApiData,
                  Web.HttpApiData.Internal.FromHttpApiData,
                  persistent-2.6:Database.Persist.Class.PersistField.PersistField,
                  persistent-2.6:Database.Persist.Sql.Class.PersistFieldSql,
                  ToJSON,
                  FromJSON)
      data persistent-2.6:Database.Persist.Class.PersistEntity.EntityField User typ
        = typ ~ Key User => UserId |
          typ ~ Text => UserLogin |
          typ ~ Text => UserPassword |
          typ ~ Key Account => UserAccountId
      persistent-2.6:Database.Persist.Class.PersistEntity.keyToValues
        = ((ghc-prim-0.5.0.0:GHC.Types.: [])
           . (persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
              . unUserKey))
      persistent-2.6:Database.Persist.Class.PersistEntity.keyFromValues
        = ((fmap UserKey)
           . (persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue
              . Database.Persist.TH.headNote))
      persistent-2.6:Database.Persist.Class.PersistEntity.entityDef _
        = persistent-2.6:Database.Persist.Types.Base.EntityDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "User"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "user"))
            (persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Id"))
               (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "UserId"))
               persistent-2.6:Database.Persist.Types.Base.SqlInt64
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "User"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64"))))
            []
            [persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "login"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "login"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "Text"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "password"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "password"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "Text"))
               persistent-2.6:Database.Persist.Types.Base.SqlString
               []
               True
               persistent-2.6:Database.Persist.Types.Base.NoReference,
             persistent-2.6:Database.Persist.Types.Base.FieldDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "accountId"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "account_id"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  Nothing (packPTH "AccountId"))
               (persistent-2.6:Database.Persist.Sql.Class.sqlType
                  (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
               []
               True
               (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Account"))
                  (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                     (Just (packPTH "Data.Int")) (packPTH "Int64")))]
            [persistent-2.6:Database.Persist.Types.Base.UniqueDef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "AccountIdUser"))
               (persistent-2.6:Database.Persist.Types.Base.DBName
                  (packPTH "account_id_user"))
               [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                   (packPTH "accountId"), 
                 persistent-2.6:Database.Persist.Types.Base.DBName
                   (packPTH "account_id"))]
               []]
            []
            []
            (containers-0.5.7.1:Data.Map.Base.fromList [])
            False
      persistent-2.6:Database.Persist.Class.PersistEntity.toPersistFields
        (User x_audx x_audy x_audz)
        = [persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_audx,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_audy,
           persistent-2.6:Database.Persist.Class.PersistField.SomePersistField
             x_audz]
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        [x1_audB, x2_audC, x3_audD]
        = User
          <$>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "login")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x1_audB
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "password")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x2_audC
          <*>
            ((Database.Persist.TH.mapLeft
                (Database.Persist.TH.fieldError (packPTH "accountId")))
             . persistent-2.6:Database.Persist.Class.PersistField.fromPersistValue)
              x3_audD
      persistent-2.6:Database.Persist.Class.PersistEntity.fromPersistValues
        x_audA
        = (Left
           $ (mappend
                (packPTH "User: fromPersistValues failed on: ")
                (Data.Text.pack $ (show x_audA))))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToFieldNames
        (AccountIdUser {})
        = [(persistent-2.6:Database.Persist.Types.Base.HaskellName
              (packPTH "accountId"), 
            persistent-2.6:Database.Persist.Types.Base.DBName
              (packPTH "account_id"))]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueToValues
        (AccountIdUser x_audE)
        = [persistent-2.6:Database.Persist.Class.PersistField.toPersistValue
             x_audE]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistUniqueKeys
        (User _login_audF _password_audG _accountId_audH)
        = [AccountIdUser _accountId_audH]
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        UserId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "Id"))
            (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "UserId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "User"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        UserLogin
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "login"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "login"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "Text"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        UserPassword
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "password"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "password"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "Text"))
            persistent-2.6:Database.Persist.Types.Base.SqlString
            []
            True
            persistent-2.6:Database.Persist.Types.Base.NoReference
      persistent-2.6:Database.Persist.Class.PersistEntity.persistFieldDef
        UserAccountId
        = persistent-2.6:Database.Persist.Types.Base.FieldDef
            (persistent-2.6:Database.Persist.Types.Base.HaskellName
               (packPTH "accountId"))
            (persistent-2.6:Database.Persist.Types.Base.DBName
               (packPTH "account_id"))
            (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
               Nothing (packPTH "AccountId"))
            persistent-2.6:Database.Persist.Types.Base.SqlInt64
            []
            True
            (persistent-2.6:Database.Persist.Types.Base.ForeignRef
               (persistent-2.6:Database.Persist.Types.Base.HaskellName
                  (packPTH "Account"))
               (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                  (Just (packPTH "Data.Int")) (packPTH "Int64")))
      persistent-2.6:Database.Persist.Class.PersistEntity.persistIdField
        = UserId
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        UserId
        = lensPTH
            persistent-2.6:Database.Persist.Class.PersistEntity.entityKey
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity _
                                                                           value_audI)
               key_audJ
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audJ value_audI)
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        UserLogin
        = lensPTH
            (userLogin
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audK
                                                                           value_audL)
               x_audM
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audK (value_audL {userLogin = x_audM}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        UserPassword
        = lensPTH
            (userPassword
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audK
                                                                           value_audL)
               x_audM
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audK (value_audL {userPassword = x_audM}))
      persistent-2.6:Database.Persist.Class.PersistEntity.fieldLens
        UserAccountId
        = lensPTH
            (userAccountId
             . persistent-2.6:Database.Persist.Class.PersistEntity.entityVal)
            (\ (persistent-2.6:Database.Persist.Class.PersistEntity.Entity key_audK
                                                                           value_audL)
               x_audM
               -> persistent-2.6:Database.Persist.Class.PersistEntity.Entity
                    key_audK (value_audL {userAccountId = x_audM}))
    instance persistent-2.6:Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend User where
      persistent-2.6:Database.Persist.Class.PersistStore.toBackendKey
        = unUserKey
      persistent-2.6:Database.Persist.Class.PersistStore.fromBackendKey
        = UserKey
    migrateAll :: persistent-2.6:Database.Persist.Sql.Types.Migration
    migrateAll
      = do { let defs_audN
                   = [persistent-2.6:Database.Persist.Types.Base.EntityDef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Account"))
                        (persistent-2.6:Database.Persist.Types.Base.DBName
                           (packPTH "account"))
                        (persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "Id"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "AccountId"))
                           persistent-2.6:Database.Persist.Types.Base.SqlInt64
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Account"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                        []
                        [persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "created"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "created"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "UTCTime"))
                           persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference]
                        []
                        []
                        [packPTH "Generic"]
                        (containers-0.5.7.1:Data.Map.Base.fromList [])
                        False,
                      persistent-2.6:Database.Persist.Types.Base.EntityDef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Family"))
                        (persistent-2.6:Database.Persist.Types.Base.DBName
                           (packPTH "family"))
                        (persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "Id"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "FamilyId"))
                           persistent-2.6:Database.Persist.Types.Base.SqlInt64
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Family"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                        []
                        [persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "name"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "name"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              (Just (packPTH "Server")) (packPTH "FamilyName"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "created"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "created"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "UTCTime"))
                           persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "lastAccessed"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "last_accessed"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "UTCTime"))
                           persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "lastUsedBabyNames"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "last_used_baby_names"))
                           (persistent-2.6:Database.Persist.Types.Base.FTList
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 Nothing (packPTH "Text")))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference]
                        []
                        []
                        [packPTH "Generic", packPTH "Show"]
                        (containers-0.5.7.1:Data.Map.Base.fromList [])
                        False,
                      persistent-2.6:Database.Persist.Types.Base.EntityDef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "FamilyAccount"))
                        (persistent-2.6:Database.Persist.Types.Base.DBName
                           (packPTH "family_account"))
                        (persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "Id"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "FamilyAccountId"))
                           persistent-2.6:Database.Persist.Types.Base.SqlInt64
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "FamilyAccount"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                        []
                        [persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "accountId"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "account_id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "AccountId"))
                           (persistent-2.6:Database.Persist.Sql.Class.sqlType
                              (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Account"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "familyId"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "family_id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "FamilyId"))
                           (persistent-2.6:Database.Persist.Sql.Class.sqlType
                              (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Family"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "joined"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "joined"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "UTCTime"))
                           persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "invitedBy"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "invited_by"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "InvitationDelivery"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           [packPTH "Maybe"]
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference]
                        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "FamilyMember"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "family_member"))
                           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                               (packPTH "accountId"), 
                             persistent-2.6:Database.Persist.Types.Base.DBName
                               (packPTH "account_id")),
                            (persistent-2.6:Database.Persist.Types.Base.HaskellName
                               (packPTH "familyId"), 
                             persistent-2.6:Database.Persist.Types.Base.DBName
                               (packPTH "family_id"))]
                           []]
                        []
                        []
                        (containers-0.5.7.1:Data.Map.Base.fromList [])
                        False,
                      persistent-2.6:Database.Persist.Types.Base.EntityDef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Invitation"))
                        (persistent-2.6:Database.Persist.Types.Base.DBName
                           (packPTH "invitation"))
                        (persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "Id"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "InvitationId"))
                           persistent-2.6:Database.Persist.Types.Base.SqlInt64
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Invitation"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                        []
                        [persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "secret"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "secret"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "Secret"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "familyId"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "family_id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "FamilyId"))
                           (persistent-2.6:Database.Persist.Sql.Class.sqlType
                              (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Family"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "created"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "created"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "UTCTime"))
                           persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "delivery"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "delivery"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "InvitationDelivery"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "senderId"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "sender_id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "DeviceId"))
                           (persistent-2.6:Database.Persist.Sql.Class.sqlType
                              (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Device"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "receiverId"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "receiver_id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "AccountId"))
                           (persistent-2.6:Database.Persist.Sql.Class.sqlType
                              (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                           [packPTH "Maybe"]
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Account"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64")))]
                        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "SecretInvitation"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "secret_invitation"))
                           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                               (packPTH "secret"), 
                             persistent-2.6:Database.Persist.Types.Base.DBName
                               (packPTH "secret"))]
                           []]
                        []
                        [packPTH "Show", packPTH "Generic"]
                        (containers-0.5.7.1:Data.Map.Base.fromList [])
                        False,
                      persistent-2.6:Database.Persist.Types.Base.EntityDef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Device"))
                        (persistent-2.6:Database.Persist.Types.Base.DBName
                           (packPTH "device"))
                        (persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "Id"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "DeviceId"))
                           persistent-2.6:Database.Persist.Types.Base.SqlInt64
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Device"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                        []
                        [persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "name"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "name"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "Text"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           [packPTH "Maybe"]
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "authToken"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "auth_token"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "AuthToken"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "accountId"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "account_id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "AccountId"))
                           (persistent-2.6:Database.Persist.Sql.Class.sqlType
                              (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Account"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "lastAccessed"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "last_accessed"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "UTCTime"))
                           persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "userAgent"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "user_agent"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "Text"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference]
                        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "AuthTokenDevice"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "auth_token_device"))
                           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                               (packPTH "authToken"), 
                             persistent-2.6:Database.Persist.Types.Base.DBName
                               (packPTH "auth_token"))]
                           []]
                        []
                        [packPTH "Generic"]
                        (containers-0.5.7.1:Data.Map.Base.fromList [])
                        False,
                      persistent-2.6:Database.Persist.Types.Base.EntityDef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "User"))
                        (persistent-2.6:Database.Persist.Types.Base.DBName
                           (packPTH "user"))
                        (persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "Id"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "UserId"))
                           persistent-2.6:Database.Persist.Types.Base.SqlInt64
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "User"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                        []
                        [persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "login"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "login"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "Text"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "password"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "password"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "Text"))
                           persistent-2.6:Database.Persist.Types.Base.SqlString
                           []
                           True
                           persistent-2.6:Database.Persist.Types.Base.NoReference,
                         persistent-2.6:Database.Persist.Types.Base.FieldDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "accountId"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "account_id"))
                           (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                              Nothing (packPTH "AccountId"))
                           (persistent-2.6:Database.Persist.Sql.Class.sqlType
                              (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                           []
                           True
                           (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                              (persistent-2.6:Database.Persist.Types.Base.HaskellName
                                 (packPTH "Account"))
                              (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                                 (Just (packPTH "Data.Int")) (packPTH "Int64")))]
                        [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                           (persistent-2.6:Database.Persist.Types.Base.HaskellName
                              (packPTH "AccountIdUser"))
                           (persistent-2.6:Database.Persist.Types.Base.DBName
                              (packPTH "account_id_user"))
                           [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                               (packPTH "accountId"), 
                             persistent-2.6:Database.Persist.Types.Base.DBName
                               (packPTH "account_id"))]
                           []]
                        []
                        []
                        (containers-0.5.7.1:Data.Map.Base.fromList [])
                        False];
             persistent-2.6:Database.Persist.Sql.Migration.migrate
               defs_audN
               (persistent-2.6:Database.Persist.Types.Base.EntityDef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Account"))
                  (persistent-2.6:Database.Persist.Types.Base.DBName
                     (packPTH "account"))
                  (persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "Id"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "AccountId"))
                     persistent-2.6:Database.Persist.Types.Base.SqlInt64
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Account"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                  []
                  [persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "created"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "created"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "UTCTime"))
                     persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference]
                  []
                  []
                  [packPTH "Generic"]
                  (containers-0.5.7.1:Data.Map.Base.fromList [])
                  False);
             persistent-2.6:Database.Persist.Sql.Migration.migrate
               defs_audN
               (persistent-2.6:Database.Persist.Types.Base.EntityDef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Family"))
                  (persistent-2.6:Database.Persist.Types.Base.DBName
                     (packPTH "family"))
                  (persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "Id"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "FamilyId"))
                     persistent-2.6:Database.Persist.Types.Base.SqlInt64
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Family"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                  []
                  [persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "name"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "name"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        (Just (packPTH "Server")) (packPTH "FamilyName"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "created"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "created"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "UTCTime"))
                     persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "lastAccessed"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "last_accessed"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "UTCTime"))
                     persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "lastUsedBabyNames"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "last_used_baby_names"))
                     (persistent-2.6:Database.Persist.Types.Base.FTList
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           Nothing (packPTH "Text")))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference]
                  []
                  []
                  [packPTH "Generic", packPTH "Show"]
                  (containers-0.5.7.1:Data.Map.Base.fromList [])
                  False);
             persistent-2.6:Database.Persist.Sql.Migration.migrate
               defs_audN
               (persistent-2.6:Database.Persist.Types.Base.EntityDef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "FamilyAccount"))
                  (persistent-2.6:Database.Persist.Types.Base.DBName
                     (packPTH "family_account"))
                  (persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "Id"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "FamilyAccountId"))
                     persistent-2.6:Database.Persist.Types.Base.SqlInt64
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "FamilyAccount"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                  []
                  [persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "accountId"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "account_id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "AccountId"))
                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                        (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Account"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "familyId"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "family_id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "FamilyId"))
                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                        (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Family"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "joined"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "joined"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "UTCTime"))
                     persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "invitedBy"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "invited_by"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "InvitationDelivery"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     [packPTH "Maybe"]
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference]
                  [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "FamilyMember"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "family_member"))
                     [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                         (packPTH "accountId"), 
                       persistent-2.6:Database.Persist.Types.Base.DBName
                         (packPTH "account_id")),
                      (persistent-2.6:Database.Persist.Types.Base.HaskellName
                         (packPTH "familyId"), 
                       persistent-2.6:Database.Persist.Types.Base.DBName
                         (packPTH "family_id"))]
                     []]
                  []
                  []
                  (containers-0.5.7.1:Data.Map.Base.fromList [])
                  False);
             persistent-2.6:Database.Persist.Sql.Migration.migrate
               defs_audN
               (persistent-2.6:Database.Persist.Types.Base.EntityDef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Invitation"))
                  (persistent-2.6:Database.Persist.Types.Base.DBName
                     (packPTH "invitation"))
                  (persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "Id"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "InvitationId"))
                     persistent-2.6:Database.Persist.Types.Base.SqlInt64
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Invitation"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                  []
                  [persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "secret"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "secret"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "Secret"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "familyId"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "family_id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "FamilyId"))
                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                        (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Family"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "created"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "created"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "UTCTime"))
                     persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "delivery"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "delivery"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "InvitationDelivery"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "senderId"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "sender_id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "DeviceId"))
                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                        (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Device"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "receiverId"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "receiver_id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "AccountId"))
                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                        (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                     [packPTH "Maybe"]
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Account"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64")))]
                  [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "SecretInvitation"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "secret_invitation"))
                     [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                         (packPTH "secret"), 
                       persistent-2.6:Database.Persist.Types.Base.DBName
                         (packPTH "secret"))]
                     []]
                  []
                  [packPTH "Show", packPTH "Generic"]
                  (containers-0.5.7.1:Data.Map.Base.fromList [])
                  False);
             persistent-2.6:Database.Persist.Sql.Migration.migrate
               defs_audN
               (persistent-2.6:Database.Persist.Types.Base.EntityDef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "Device"))
                  (persistent-2.6:Database.Persist.Types.Base.DBName
                     (packPTH "device"))
                  (persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "Id"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "DeviceId"))
                     persistent-2.6:Database.Persist.Types.Base.SqlInt64
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Device"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                  []
                  [persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "name"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "name"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "Text"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     [packPTH "Maybe"]
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "authToken"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "auth_token"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "AuthToken"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "accountId"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "account_id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "AccountId"))
                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                        (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Account"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))),
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "lastAccessed"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "last_accessed"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "UTCTime"))
                     persistent-2.6:Database.Persist.Types.Base.SqlDayTime
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "userAgent"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "user_agent"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "Text"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference]
                  [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "AuthTokenDevice"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "auth_token_device"))
                     [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                         (packPTH "authToken"), 
                       persistent-2.6:Database.Persist.Types.Base.DBName
                         (packPTH "auth_token"))]
                     []]
                  []
                  [packPTH "Generic"]
                  (containers-0.5.7.1:Data.Map.Base.fromList [])
                  False);
             persistent-2.6:Database.Persist.Sql.Migration.migrate
               defs_audN
               (persistent-2.6:Database.Persist.Types.Base.EntityDef
                  (persistent-2.6:Database.Persist.Types.Base.HaskellName
                     (packPTH "User"))
                  (persistent-2.6:Database.Persist.Types.Base.DBName
                     (packPTH "user"))
                  (persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "Id"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName (packPTH "id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "UserId"))
                     persistent-2.6:Database.Persist.Types.Base.SqlInt64
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "User"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64"))))
                  []
                  [persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "login"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "login"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "Text"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "password"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "password"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "Text"))
                     persistent-2.6:Database.Persist.Types.Base.SqlString
                     []
                     True
                     persistent-2.6:Database.Persist.Types.Base.NoReference,
                   persistent-2.6:Database.Persist.Types.Base.FieldDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "accountId"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "account_id"))
                     (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                        Nothing (packPTH "AccountId"))
                     (persistent-2.6:Database.Persist.Sql.Class.sqlType
                        (Data.Proxy.Proxy :: Data.Proxy.Proxy GHC.Int.Int64))
                     []
                     True
                     (persistent-2.6:Database.Persist.Types.Base.ForeignRef
                        (persistent-2.6:Database.Persist.Types.Base.HaskellName
                           (packPTH "Account"))
                        (persistent-2.6:Database.Persist.Types.Base.FTTypeCon
                           (Just (packPTH "Data.Int")) (packPTH "Int64")))]
                  [persistent-2.6:Database.Persist.Types.Base.UniqueDef
                     (persistent-2.6:Database.Persist.Types.Base.HaskellName
                        (packPTH "AccountIdUser"))
                     (persistent-2.6:Database.Persist.Types.Base.DBName
                        (packPTH "account_id_user"))
                     [(persistent-2.6:Database.Persist.Types.Base.HaskellName
                         (packPTH "accountId"), 
                       persistent-2.6:Database.Persist.Types.Base.DBName
                         (packPTH "account_id"))]
                     []]
                  []
                  []
                  (containers-0.5.7.1:Data.Map.Base.fromList [])
                  False) }
